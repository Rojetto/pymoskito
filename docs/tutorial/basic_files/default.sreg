# Name of the regime, this will be displayed in the "Regimes" window.
- Name: NAME_OF_THIS_REGIME

  # decide whether previous settings should remain or not. Typically regimes
  # become a lot shorter if you only overwrite the value that change
  # e.g. while varying a physical parameter
  clear previous: !!python/bool True

  # Class name of the SimulationModel that is to be simulated.
  Model:
   type: NAME_OF_THIS_MODEL
   initial state: INITIAL_STATES_DEPENDING_ON_MODEL

  # Class name and settings for the solver
  # As you can see, not all parameters have to be given, all settings that are
  # not given here will be taken from the default values, defined in the class.
  Solver:
   type: ODEInt
   # the measure rate controls how dense the returned data will be
   measure rate: 10
   end time: 10

  # Class Name of the controller
  Controller:
   type: NAME_OF_YOUR_CONTROLLER

  # Class Name and settings of the Trajectory
  # PyMoskito provides three classes by default:
  # SmoothTransition, SetPoint, 
  # to see 
  Trajectory:
   type: SmoothTransition
   states: [-4, 4]
   start time: 0
   delta t: 8

  # Class Name and settings of the ModelInputMixer
  # When using a Feedforward, just provide "Feedforward" for Input B
  ModelMixer:
   type: AdditiveMixer
   Input A: Controller
   Input B: None
